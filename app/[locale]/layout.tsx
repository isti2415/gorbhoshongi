import { ThemeProvider } from "@/components/theme-provider";
import { locales } from "@/config";
import { cn } from "@/lib/utils";
import type { Metadata } from "next";
import { unstable_setRequestLocale } from "next-intl/server";
import {
  Noto_Sans_Bengali as FontBengali,
  Noto_Sans as FontEnglish,
} from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import { NextIntlClientProvider, useMessages } from "next-intl";
import { TooltipProvider } from "@/components/ui/tooltip";
import ReactQueryProvider from "@/components/ReactQueryProvider";

// Can be imported from a shared config

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}

const fontEnglish = FontEnglish({
  subsets: ["latin"],
  variable: "--font-english",
});

const fontBengali = FontBengali({
  subsets: ["bengali"],
  variable: "--font-bengali",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  unstable_setRequestLocale(locale);

  const messages = useMessages();

  return (
    <ReactQueryProvider>
      <html lang={locale}>
        <body
          className={cn(
            "min-h-screen antialiased",
            locale === "en"
              ? fontEnglish.className
              : locale === "bn"
              ? fontBengali.className
              : fontEnglish.className
          )}
        >
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <NextIntlClientProvider locale={locale} messages={messages}>
              <TooltipProvider>
                {children}
                <Toaster />
              </TooltipProvider>
            </NextIntlClientProvider>
          </ThemeProvider>
        </body>
      </html>
    </ReactQueryProvider>
  );
}
